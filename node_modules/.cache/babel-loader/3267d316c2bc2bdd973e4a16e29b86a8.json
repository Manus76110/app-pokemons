{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Perso/app-pokemons/src/components/pokemon-form.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport formatType from '../helpers/format-type';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonForm = _ref => {\n  _s();\n\n  let {\n    pokemon\n  } = _ref;\n  const [form, setForm] = useState({\n    name: {\n      value: pokemon.name,\n      isValid: true\n    },\n    hp: {\n      value: pokemon.hp,\n      isValid: true\n    },\n    cp: {\n      value: pokemon.cp,\n      isValid: true\n    },\n    types: {\n      value: pokemon.types,\n      isValid: true\n    }\n  });\n  const types = ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy']; // fonction pour recuperer et cocher le type du pokemon\n\n  const hasType = type => {\n    return form.types.value.includes(type);\n  }; // fonction de récuperation des changements de données d'un pokemon\n\n\n  const handleInputChange = evt => {\n    const fieldName = evt.target.name;\n    const fieldValue = evt.target.value;\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      },\n      value: undefined\n    };\n    setForm({ ...form,\n      ...newField\n    });\n  }; // fonction de modification du type du pokemon\n\n\n  const selectType = (type, evt) => {\n    const cheked = evt.target.checked;\n    let newField;\n\n    if (cheked) {\n      // si l'utilisateur coche un type, et l'ajoute à la liste du pokemon\n      const newTypes = form.types.value.concat([type]);\n      newField = {\n        value: newTypes\n      };\n    } else {\n      // si l'utilisateur décoche un type, on le retire de la liste du pokemon\n      const newTypes = form.types.value.filter(currentType => currentType !== type);\n      newField = {\n        value: newTypes\n      };\n    }\n\n    setForm({ ...form,\n      ...{\n        types: newField\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s12 m8 offset-m2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card hoverable\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: pokemon.picture,\n              alt: pokemon.name,\n              style: {\n                width: '250px',\n                margin: '0 auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-stacked\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"name\",\n                  name: \"name\",\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: form.name.value,\n                  onChange: evt => handleInputChange(evt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"hp\",\n                  children: \"Point de vie\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"hp\",\n                  name: \"hp\",\n                  type: \"number\",\n                  className: \"form-control\",\n                  value: form.hp.value,\n                  onChange: evt => handleInputChange(evt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"cp\",\n                  children: \"D\\xE9g\\xE2ts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"cp\",\n                  name: \"cp\",\n                  type: \"number\",\n                  className: \"form-control\",\n                  value: form.cp.value,\n                  onChange: evt => handleInputChange(evt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Types\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this), types.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '10px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      id: type,\n                      type: \"checkbox\",\n                      className: \"filled-in\",\n                      value: type //fonction pour recuperer et cocher le type du pokemon\n                      ,\n                      checked: hasType(type)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: formatType(type),\n                        children: type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 134,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 45\n                  }, this)\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-action center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn\",\n                children: \"Valider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PokemonForm, \"BB+Wdq9oj7ZVn13t2v7691gDkNQ=\");\n\n_c = PokemonForm;\nexport default PokemonForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonForm\");","map":{"version":3,"names":["React","useState","formatType","PokemonForm","pokemon","form","setForm","name","value","isValid","hp","cp","types","hasType","type","includes","handleInputChange","evt","fieldName","target","fieldValue","newField","undefined","selectType","cheked","checked","newTypes","concat","filter","currentType","picture","width","margin","map","marginBottom"],"sources":["/var/www/html/Perso/app-pokemons/src/components/pokemon-form.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\n\ntype Props = {\n    pokemon: Pokemon\n};\n\ntype Field = {\n    value: any,\n    error?: string,\n    isValid?: boolean\n}\n\ntype Form = {\n    name: Field,\n    hp: Field,\n    cp: Field,\n    types: Field,\n}\n\nconst PokemonForm: FunctionComponent<Props> = ({ pokemon }) => {\n\n    const [form, setForm] = useState<Form>({\n        name: { value: pokemon.name, isValid: true },\n        hp: { value: pokemon.hp, isValid: true },\n        cp: { value: pokemon.cp, isValid: true },\n        types: { value: pokemon.types, isValid: true },\n    });\n\n    const types: string[] = [\n        'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n        'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n    ];\n\n    // fonction pour recuperer et cocher le type du pokemon\n    const hasType = (type: string): boolean => {\n        return form.types.value.includes(type);\n    }\n\n    // fonction de récuperation des changements de données d'un pokemon\n    const handleInputChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        const fieldName: string = evt.target.name;\n        const fieldValue: string = evt.target.value;\n        const newField: Field = {\n            [fieldName]: { value: fieldValue },\n            value: undefined\n        };\n\n        setForm({ ...form, ...newField });\n    }\n\n    // fonction de modification du type du pokemon\n    const selectType = (type:string, evt: React.ChangeEvent<HTMLInputElement>): void => {\n        const cheked = evt.target.checked;\n        let newField: Field;\n\n        if(cheked) {\n            // si l'utilisateur coche un type, et l'ajoute à la liste du pokemon\n            const newTypes: string[] = form.types.value.concat([type]);\n            newField = { value: newTypes };\n        }\n        else {\n            // si l'utilisateur décoche un type, on le retire de la liste du pokemon\n            const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n            newField = { value: newTypes };\n        }\n\n        setForm({...form, ...{ types: newField }})\n    }\n\n    return (\n        <form>\n            <div className=\"row\">\n                <div className=\"col s12 m8 offset-m2\">\n                    <div className=\"card hoverable\">\n                        <div className=\"card-image\">\n                            <img src={pokemon.picture} alt={pokemon.name} style={{ width: '250px', margin: '0 auto' }} />\n                        </div>\n                        <div className=\"card-stacked\">\n                            <div className=\"card-content\">\n\n                                {/* Pokemon name */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name\">Nom</label>\n                                    <input \n                                        id=\"name\"\n                                        name='name'\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        value={form.name.value}\n                                        onChange={evt => handleInputChange(evt)}>\n                                    </input>\n                                </div>\n\n                                {/* Pokemon hp */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"hp\">Point de vie</label>\n                                    <input \n                                        id=\"hp\"\n                                        name='hp'\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        value={form.hp.value}\n                                        onChange={evt => handleInputChange(evt)}>\n                                    </input>\n                                </div>\n\n                                {/* Pokemon cp */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"cp\">Dégâts</label>\n                                    <input\n                                        id=\"cp\"\n                                        name='cp'\n                                        type=\"number\"\n                                        className=\"form-control\"\n                                        value={form.cp.value}\n                                        onChange={evt => handleInputChange(evt)}>\n                                    </input>\n                                </div>\n                                {/* Pokemon types */}\n                                <div className=\"form-group\">\n                                    <label>Types</label>\n                                    {types.map(type => (\n                                        <div key={type} style={{ marginBottom: '10px' }}>\n                                            <label>\n                                                <input id={type}\n                                                    type=\"checkbox\"\n                                                    className=\"filled-in\"\n                                                    value={type}\n                                                    //fonction pour recuperer et cocher le type du pokemon\n                                                    checked={hasType(type)}></input>\n                                                <span>\n                                                    <p className={formatType(type)}>{type}</p>\n                                                </span>\n                                            </label>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                            <div className=\"card-action center\">\n                                {/* Submit button */}\n                                <button type=\"submit\" className=\"btn\">Valider</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport default PokemonForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}